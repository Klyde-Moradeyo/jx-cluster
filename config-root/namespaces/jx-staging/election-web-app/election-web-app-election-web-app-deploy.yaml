# Source: election-web-app/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: election-web-app-election-web-app
  labels:
    draft: draft-app
    chart: "election-web-app-0.0.260"
    gitops.jenkins-x.io/pipeline: 'namespaces'
  annotations:
    meta.helm.sh/release-name: 'election-web-app'
    wave.pusher.com/update-on-config-change: 'true'
  namespace: jx-staging
spec:
  selector:
    matchLabels:
      app: election-web-app-election-web-app
  replicas: 1
  template:
    metadata:
      labels:
        draft: draft-app
        app: election-web-app-election-web-app
    spec:
      serviceAccountName: election-web-app-election-web-app
      initContainers:
        - name: init-db
          image: postgres:13.3
          command: ["bin/sh", "-c", "psql -a -U $DB_USER -h $DB_HOST -d $DB_NAME -f /data/init.sql"]
          env:
            - name: DB_HOST
              value: "myteam-demodb"
            - name: DB_NAME
              value: "demodb"
            - name: DB_USER
              value: "myowner"
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: myowner.myteam-demodb.credentials.postgresql.acid.zalan.do
          volumeMounts:
            - mountPath: /data
              name: init-sql
      containers:
        - name: election-web-app
          image: "847399026905.dkr.ecr.eu-west-2.amazonaws.com/surreyfyp/election-web-app:0.0.260"
          imagePullPolicy: IfNotPresent
          env:
            - name: VERSION
              value: 0.0.260
            - name: DB_HOST
              value: "myteam-demodb"
            - name: DB_NAME
              value: "demodb"
            - name: DB_USER
              value: "myowner"
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: myowner.myteam-demodb.credentials.postgresql.acid.zalan.do
          envFrom: null
          ports:
            - name: http
              containerPort: 80
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            httpGet:
              path: /
              port: 80
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 400m
              memory: 256Mi
            requests:
              cpu: 200m
              memory: 128Mi
      terminationGracePeriodSeconds:
      imagePullSecrets:
      volumes:
        - name: init-sql
          configMap:
            name: demo-db-init-sql
